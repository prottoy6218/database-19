// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Category {
  id                BigInt      @id @default(autoincrement()) @db.UnsignedBigInt 
  title             String      @db.VarChar(100)
  metaTitle         String      @db.VarChar(100) 
  slug              String      @db.VarChar(100)  
  content           String      @db.Text 
  createAt          DateTime?   @default(now()) @db.DateTime(6)
  updateAt          DateTime?   @updatedAt @db.DateTime(6)
}

model User {
  id                BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  firstName         String      @db.VarChar(100)
  middleName        String      @db.VarChar(100)
  lastName          String      @db.VarChar(100)
  mobile            String      @db.VarChar(100)    @unique
  email             String      @db.VarChar(100)    @unique
  password          String      @db.VarChar(100)   
  admin             Int         @db.TinyInt         @default(1)
  registeredAt      DateTime    @default(now())     @db.DateTime(6) 
  lastLoginAt       DateTime?   @db.DateTime
  createAt          DateTime?   @default(now())     @db.DateTime(6)
  updateAt          DateTime?   @updatedAt          @db.DateTime(6)
  Product           Product[]
  Cart              Cart[]
  Order             Order[]
}   

model Cart {
    id              BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
    userId          BigInt              @db.UnsignedBigInt 
    title           String              @db.VarChar(100)
    sessionId       String              @db.VarChar(100)
    token           String              @db.VarChar(100) 
    status          String              @db.VarChar(100) 
    firstName       String              @db.VarChar(100)
    middleName      String              @db.VarChar(100)
    lastName        String              @db.VarChar(100)
    mobile          String              @db.VarChar(100)    
    email           String              @db.VarChar(100)   
    city            String              @db.VarChar(100)
    country         String              @db.VarChar(100)
    createAt        DateTime?           @default(now()) @db.DateTime(6)
    updateAt        DateTime?           @updatedAt @db.DateTime(6)
    user            User                @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model Order {
    id              BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
    userId          BigInt              @db.UnsignedBigInt 
    title           String              @db.VarChar(100) 
    token           String              @db.VarChar(100) 
    subTotal        Int
    itemDiscount    Int
    tax             Int
    total           Int
    discount        Int
    grandTotal      Int
    firstName       String              @db.VarChar(100)
    middleName      String              @db.VarChar(100)
    lastName        String              @db.VarChar(100)
    mobile          String              @db.VarChar(100)
    email           String              @db.VarChar(100)
    city            String              @db.VarChar(100)
    country         String              @db.VarChar(100)
    createAt        DateTime?           @default(now()) @db.DateTime(6)
    updateAt        DateTime?           @updatedAt @db.DateTime(6)
    user            User                @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model Product {
    id              BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
    userId          BigInt              @db.UnsignedBigInt 
    firstName       String              @db.VarChar(100) 
    metaTitle       String              @db.VarChar(100) 
    slug            String              @db.VarChar(100)  
    summary         String              @db.VarChar(100)
    price           Int                 
    discount        Int                 
    publishedAt     DateTime?           @db.DateTime(6) 
    startsAt        DateTime?           @default(now()) @db.DateTime(6)
    endsAt          DateTime?           @default(now()) @db.DateTime(6)
    createAt        DateTime?           @default(now()) @db.DateTime(6)
    updateAt        DateTime?           @updatedAt @db.DateTime(6)
    user            User                @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Restrict)
    Product_Meta    Product_Meta[]
    Product_Review  Product_Review[]
}

model Product_Meta {
    id              BigInt              @id @default(autoincrement()) @db.UnsignedBigInt 
    productId       BigInt              @db.UnsignedBigInt
    key             String              @db.VarChar(100)
    content         String              @db.VarChar(100)
    createAt        DateTime?           @default(now()) @db.DateTime(6)
    updateAt        DateTime?           @updatedAt @db.DateTime(6)
    product         Product             @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model Product_Review {
    id              BigInt              @id @default(autoincrement()) @db.UnsignedBigInt 
    productId       BigInt              @db.UnsignedBigInt
    title           String              @db.VarChar(100)
    rating          String              @db.VarChar(100)
    content         String              @db.VarChar(100)
    createAt        DateTime?           @default(now()) @db.DateTime(6)
    updateAt        DateTime?           @updatedAt @db.DateTime(6)
    product         Product             @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}